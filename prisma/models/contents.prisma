/**
 * One Content → belongs to one Category
 * One Content → belongs to one SubCategory
 * One Content → has one AdditionalField (optional)
 * One Category → has many SubCategories
 * One SubCategory → belongs to one Category
 */

model Content {
  id             String      @id @default(uuid())
  contentType    ContentType
  title          String
  subTitle       String
  paragraph      String?
  shortQuote     String?
  image          String?
  videoFile      String?
  imageCaption   String?
  audioFile      String?
  tags           String[]
  videoThumbnail String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    Status   @default(PENDING)
  isDeleted Boolean  @default(false)

  //-------------- Relations-----------------
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  subCategoryId String
  subCategory   SubCategory @relation(fields: [subCategoryId], references: [id])

  additionalField Json?

  @@map("contents")
}



model Category {
  id            String        @id @default(uuid())
  tamplate      String
  name          String        @unique
  slug          String?       @unique
  createdAt     DateTime      @default(now())
  isDeleted     Boolean       @default(false)
  // --------------Relations-------------
  subCategories SubCategory[]
  contents      Content[]

  @@map("categories")
}

model SubCategory {
  id         String    @id @default(uuid())
  subname    String?   @unique
  subslug    String?   @unique
  categoryId String
  category   Category  @relation(fields: [categoryId], references: [id])
  // Relations
  contents   Content[]

  @@map("sub_categories")
}

enum Status {
  PENDING
  APPROVE
}
